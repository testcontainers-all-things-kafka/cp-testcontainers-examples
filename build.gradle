buildscript {
  ext {

  }
}

plugins {
  id 'java'
  id 'idea'
  id "com.github.davidmc24.gradle.plugin.avro" version "1.3.0"
}

apply plugin: 'maven-publish'

group = 'com.github.testcontainers-all-things-kafka'
version = '0.1.0-SNAPSHOT'

sourceCompatibility = 1.11

repositories {
  mavenCentral()

  maven {
    url 'https://packages.confluent.io/maven'
  }
}
allprojects {
  repositories {
    maven { url 'https://jitpack.io' }
  }
}

ext {
  confluentVersion = '7.0.1'
  kafkaVersion = '3.1.0'
  testContainerVersion = '1.17.1'
}

dependencies {
  implementation "org.apache.avro:avro:1.11.0"
  implementation 'ch.qos.logback:logback-classic:1.2.11'
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
  testImplementation 'org.assertj:assertj-core:3.22.0'

  testCompileOnly 'org.projectlombok:lombok:1.18.24'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
  
  testImplementation 'com.github.christophschubert:cp-testcontainers:v0.2.1'
  //TODO: use cp-testcontainers plugin `java-library` 
  implementation "org.testcontainers:testcontainers:$testContainerVersion"
  implementation "org.testcontainers:kafka:$testContainerVersion"
  implementation "org.apache.kafka:connect-api:$kafkaVersion"
  implementation "org.apache.kafka:kafka-clients:$kafkaVersion"

  implementation "io.confluent:kafka-avro-serializer:$confluentVersion"

  //end TODO

}

test {
  useJUnitPlatform()
}

tasks.withType(Test) {
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = false
    events "passed", "skipped", "failed"
    exceptionFormat "full"
  }
}